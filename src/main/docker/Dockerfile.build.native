## Stage 1 : build with maven builder image with native capabilities
FROM quay.io/quarkus/ubi-quarkus-native-image:22.1-java11 AS build

COPY --chown=quarkus:quarkus mvnw /code/mvnw
COPY --chown=quarkus:quarkus .mvn /code/.mvn
COPY --chown=quarkus:quarkus pom.xml /code/

#Ensure mvnw is executable!
RUN chmod +x /code/mvnw

USER quarkus
WORKDIR /code

#Verify dir content/perms
RUN ls -al .
RUN whoami

#Launch maven to go get dependencies etc.. (seperate step to enable caching)
RUN ./mvnw -B org.apache.maven.plugins:maven-dependency-plugin:3.3.0:go-offline

#Bring in the source, and build it (native app, doable as we're using ubi-quarkus-native-image as our base)
COPY src /code/src
RUN ./mvnw package -Pnative

## Stage 2 : create the docker final image
FROM quay.io/quarkus/quarkus-micro-image:1.0
WORKDIR /work/
COPY --from=build /code/target/*-runner /work/application

# set up permissions for user `1001`
RUN chmod 775 /work /work/application \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work

EXPOSE 8080
USER 1001

CMD ["./application", "-Dquarkus.http.host=0.0.0.0", "-Xmx48m" ]
